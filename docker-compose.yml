# Docker Setup with Database, Authentication, Role-Based Access & Student Accommodations

### Dockerfile
```
# Use Node.js base image
FROM node:18-alpine

# Set working directory
WORKDIR /app

# Copy package files and install dependencies
COPY package.json package-lock.json ./
RUN npm install

# Copy the rest of the application
COPY . .

# Expose the port the app runs on
EXPOSE 3000

# Start the application
CMD ["npm", "run", "dev"]
```

### docker-compose.yml
```
version: '3.8'

services:
  student-iep:
    build: ./backend
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - DATABASE_URL=mongodb://mongo:27017/studentIEP
      - JWT_SECRET=supersecretkey
    depends_on:
      - mongo
    command: npm run dev

  mongo:
    image: mongo:latest
    container_name: mongo_db
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  frontend:
    build: ./frontend
    ports:
      - "3001:3001"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - student-iep
    command: npm start

volumes:
  mongo_data:
```

### Setting Up Frontend (React)
You'll need to create the **frontend directory** and install React:
```
cd frontend
npx create-react-app .
npm install axios react-router-dom
```

### Frontend Structure
```
/frontend
  â”œâ”€â”€ src/
  â”‚   â”œâ”€â”€ components/
  â”‚   â”‚   â”œâ”€â”€ Login.js
  â”‚   â”‚   â”œâ”€â”€ Register.js
  â”‚   â”‚   â”œâ”€â”€ Dashboard.js
  â”‚   â”‚   â”œâ”€â”€ AdminPanel.js
  â”‚   â”œâ”€â”€ App.js
  â”‚   â”œâ”€â”€ index.js
  â”œâ”€â”€ package.json
  â”œâ”€â”€ public/
```

### Example: Login Component (`frontend/src/components/Login.js`)
```javascript
import { useState } from "react";
import axios from "axios";

export default function Login() {
  const [username, setUsername] = useState("");
  const [password, setPassword] = useState("");

  const handleLogin = async () => {
    try {
      const response = await axios.post("http://localhost:3001/login", { username, password });
      alert("Login successful! Token: " + response.data.token);
    } catch (error) {
      alert("Login failed!");
    }
  };

  return (
    <div>
      <h2>Login</h2>
      <input type="text" placeholder="Username" onChange={(e) => setUsername(e.target.value)} />
      <input type="password" placeholder="Password" onChange={(e) => setPassword(e.target.value)} />
      <button onClick={handleLogin}>Login</button>
    </div>
  );
}
```

### Running the Full App
Once the frontend is set up, start everything with:
```
docker-compose up --build
```

Now you have a **full-stack IEP tracker** with authentication & accommodations! ðŸš€

Would you like to **add goal progress tracking next?** ðŸ“Š
